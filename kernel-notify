#!/bin/bash
workDir="/usr/share/kernel-notify"
iconPath="/usr/share/kernel-notify/icon.png"
version="4.2"
content=$(wget www.kernel.org -q -O -)

uninstall() {
PS3='Make your choice: '
options=("Yes" "No")
  select opt in "${options[@]}"
  do
      case $opt in
          "Yes")
              echo "Uninstalling:"
              sudo rm /etc/xdg/autostart/kernel-notify.desktop
              sudo rm /usr/bin/kernel-notify
              sudo rm -rf /usr/share/kernel-notify
              echo "Done"
              break
              ;;
          "No")
              exit
              ;;
          *) echo "invalid option $REPLY";;
      esac
  done
  exit
}

update() {
  /usr/share/kernel-notify/updater
}

cd $workDir

while [[ "$#" -gt 0 ]]; do case $1 in
  -h|--help) echo "Help:"; echo "-h  | --help      : Display this page and exit"; echo "-u  | --update    : Update the program and exit"; echo "-v  | --version   : Display program version and exit"; echo "-i  | --uninstall : Uninstall the program"; echo "-um | --un-mute   : Unmute the program on login"; echo "-m  | --mute      : Mute the program on login"; echo ""; echo "Program written by: Dragon8oy"; exit;;
  -i|--uninstall) echo "Are you sure you want to uninstall?"; uninstall; exit;;
  -u|--update) echo "Checking for updates:"; update; exit;;
  -v|--version) echo "Kernel-notify version: $version"; echo ""; echo "Program written by: Dragon8oy"; exit;;
  -um|--un-mute) echo "Unmuting kernel-notify:"; cd $workDir; sudo cp kernel-notify.desktop /etc/xdg/autostart/kernel-notify.desktop; echo "Done"; exit;;
  -m|--mute) echo "Muting Kernel-notify:"; cd $workDir; sudo rm /etc/xdg/autostart/kernel-notify.desktop; echo "Done"; exit;;
  *) echo "Unknown parameter passed: $1"; exit 1;;
esac; shift; done

latestVersion=$(echo $content | tr -d '\n' | awk -F'<td id="latest_button">' '{print $2}' | cut -c -70)
latestVersion=$(echo $latestVersion | tr -d '\n' | awk -F'/' '{print $8}' | cut -c -70)
latestVersion=$(echo $latestVersion |sed 's/linux-//g')
latestVersion=${latestVersion%.t*}
currVersion=$(uname -r |sed 's/-.*/ /g')

latestVersionFull=$latestVersion
currVersionFull=$currVersion

echo 'Latest Kernel: '$latestVersionFull
echo 'Current Kernel: '$currVersionFull

latestVersion=$(echo "${latestVersion//.}")
currVersion=$(echo "${currVersion//.}")

if [ "$latestVersion" -le "99" ]; then
  echo "Short kernel version found, adjusting"
  latestVersion=$(echo "$latestVersion""0")
else
  echo "More than 2 digits"
fi

if [ "$latestVersion" -ne "$currVersion" ]; then
  if [ ! -f /usr/bin/notify-send ]; then
    wall "Kernel $latestVersionFull is available, you are currently running Kernel $currVersionFull"
  else
    notify-send -u normal -i $iconPath \
"Kernel $latestVersionFull is available" \
"You are currently running Kernel $currVersionFull"
  fi
fi

latestProgVer=$(curl -s https://api.github.com/repos/dragon8oy/kernel-notify/releases/latest | grep "tag_name" | cut -d v -f 2,3 | tr -d \",)
if [ "${latestProgVer%.*}" -ne "${version%.*}" ]; then
  if [ ! -f /usr/bin/notify-send ]; then
    wall "Version v$latestProgVer is available, update with 'kernel-notify -u'"
  else
    notify-send -u normal -i $iconPath \
"Version v$latestProgVer is available" \
"Update with 'kernel-notify -u'"
  fi
fi

