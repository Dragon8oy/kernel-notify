#!/bin/bash
iconPath="/usr/share/kernel-notify/icon.png"
version="3.2"
content=$(wget www.kernel.org -q -O -)

uninstall() {
PS3='Make your choice: '
options=("Yes" "No")
  select opt in "${options[@]}"
  do
      case $opt in
          "Yes")
              echo "Uninstalling:"
              rm ~/.config/autostart/kernel-notify.desktop
              sudo rm /usr/bin/kernel-notify
              sudo rm -rf /usr/share/kernel-notify
              echo "Done"
              break
              ;;
          "No")
              exit
              ;;
          *) echo "invalid option $REPLY";;
      esac
  done
  exit
}

checkUpdate() {
  cd kernel-notify
  changed=0
  sudo git pull --dry-run | grep -q -v 'Already up-to-date.' && changed=1
  if [ $changed -gt 0 ]
  then
    echo "Program outdated, sending notification"
    notify-send -u critical -i $iconPath \
"A new version of kernel-notify is available" \
"Run 'kernel-notify -u' to update"
  else
    echo "Program is up-to-date"
  fi
  cd ../
}

update() {
  cd kernel-notify && sudo git pull && ./install.sh && cd ../ && sudo git clone https://github.com/Dragon8oy/kernel-notify.git
}

removeKernel() {
  echo "Kernel remover:"
  echo "Current user-installed kernels:"
  currVersion=$(echo "$(uname -r |sed 's/-.*//g')-0$(uname -r |sed 's/-.*//g')")
echo "$(dpkg --list | grep linux-image-unsigned)" |sed 's/ii  //g' |sed 's/linux-image-unsigned-//g' |sed 's/-generic//g' |sed 's/             amd64        Linux kernel image for version //g' |sed 's/ on 64 bit x86 SMP//g' | grep -Po "^[^ ]+(?= ?)" |sed "s/$currVersion//g"
  echo "Please select a kernel to remove:"
  read DELKERNEL
  sudo apt purge linux-headers-$DELKERNEL linux-headers-$DELKERNEL-generic linux-image-unsigned-$DELKERNEL-generic linux-modules-$DELKERNEL-generic -y
  echo "Removed selected kernel"
}

cd /usr/share/kernel-notify

while [[ "$#" -gt 0 ]]; do case $1 in
  -h|--help) echo "Help:"; echo "-h  | --help      : Display this page and exit"; echo "-u  | --update    : Update the program and exit"; echo "-v  | --version   : Display program version and exit"; echo "-r  | --remove    : Remove a kernel from a displayed list"; echo "-i  | --uninstall : Uninstall the program"; echo "-um | --un-mute   : Unmute the program on login"; echo "-m  | --mute      : Mute the program on login"; exit;;
  -i|--uninstall) echo "Are you sure you want to uninstall?"; uninstall; exit;;
  -u|--update) echo "Checking for updates:"; update; exit;;
  -v|--version) echo "Kernel-notify version: $version"; exit;;
  -r|--remove) removeKernel; exit;;
  -um|--un-mute) echo "Unmuting kernel-notify:"; cd $workDir; cp kernel-notify.desktop ~/.config/autostart/kernel-notify.desktop; echo "Done"; exit;;
  -m|--mute) echo "Muting Kernel-notify:"; cd $workDir; sudo rm ~/.config/autostart/kernel-notify.desktop; echo "Done"; exit;;
  *) echo "Unknown parameter passed: $1"; exit 1;;
esac; shift; done

latestVersion=$(echo $content | tr -d '\n' | awk -F'<td id="latest_button">' '{print $2}' | cut -c -70)
latestVersion=$(echo $latestVersion | tr -d '\n' | awk -F'/' '{print $8}' | cut -c -70)
latestVersion=$(echo $latestVersion |sed 's/linux-//g')
latestVersion=${latestVersion%.*}
currVersion=$(uname -r |sed 's/-.*/ /g')

latestVersionFull=$latestVersion
currVersionFull=$currVersion

echo 'Latest Kernel: '$latestVersionFull
echo 'Current Kernel: '$currVersionFull

latestVersion=$(echo "${latestVersion//.}")
currVersion=$(echo "${currVersion//.}")

if [ "$latestVersion" -gt "$currVersion" ]
then
  notify-send -u normal -i $iconPath \
"Kernel $latestVersionFull is available" \
"You are currently running Kernel $currVersionFull"
fi

checkUpdate
