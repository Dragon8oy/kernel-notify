#!/bin/bash

#Rebuild notifications
if [ ! "$(arch)" == "x86_64" ]; then
  if which g++ > /dev/null 2>&1 && dpkg -s libnotify-dev | grep Status |grep -q installed; then
    if sudo g++ /usr/share/kernel-notify/notifications.cc -o /usr/share/kernel-notify/notifications `pkg-config --cflags --libs libnotify`; then
      echo "g++: built notifications"
    else
      echo "    ---------------    "
      echo "  g++: failed to build notifications"
      echo "  ATTENTION: Notifications failed to build, rebuild with:"
      echo "  'g++ /usr/share/kernel-notify/notifications.cc -o /usr/share/kernel-notify/notifications \`pkg-config --cflags --libs libnotify\`'"
      echo "    ---------------    "
      sudo rm /usr/share/kernel-notify/notifications
    fi
  else
    echo "    ---------------    "
    echo "  ATTENTION: g++ and libnotify-bin need to be installed to produce notifications"
    echo "  ATTENTION: Rebuild with 'g++ /usr/share/kernel-notify/notifications.cc -o /usr/share/kernel-notify/notifications \`pkg-config --cflags --libs libnotify\`'"
    echo "    ---------------    "
    sudo rm /usr/share/kernel-notify/notifications
  fi
fi

#Config updater
if [ -f /usr/share/kernel-notify/config.old ] && ! diff /usr/share/kernel-notify/config /usr/share/kernel-notify/config.old > /dev/null; then
  echo "Updating config values..."
  configs=$(cat /usr/share/kernel-notify/config.old |grep -v "#" |sed 's|=.*||')
  for i in $configs; do
    configValue=$(cat /usr/share/kernel-notify/config.old |grep -v "#" |grep "$i" |sed 's|.*=||')
    configValue=${configValue//'"'}
    sudo kernel-notify -c "$i" "$configValue"
  done
  echo "  ATTENTION: Config updated, run 'kernel-notify -o' to view the old config"
fi

kernel-notify -v
echo "Successfully installed"
