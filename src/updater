#!/bin/bash
version="$1"
githubAPIString='-H "Accept: application/vnd.github.full+json"'
if [[ -f "$workDir/functions" ]]; then
  source "$workDir/functions"
else
  echo "Couldn't find common functions, exiting"
  exit 2
fi

mkdir -p "/tmp/kernel-notify"
if [ ! -w /tmp/kernel-notify ]; then
  echo "No permission to use /tmp/kernel-notify, please delete it and try again or run with root"
  exit 2
fi
cd /tmp/kernel-notify || exit 2
echo "Checking for updates:";

checkFiles() {
  if [ -f "$package" ]; then
    rm "$package"
  fi
  if [[ "$(ls /tmp/kernel-notify)" == "" ]]; then
    rm -rf /tmp/kernel-notify
  fi
}

latestVer=$(curl -k -s -L https://api.github.com/repos/dragon8oy/kernel-notify/releases/latest "$githubAPIString" | grep "tag_name" | cut -d v -f 2,3 | tr -d \",)

if which dpkg > /dev/null 2>&1; then
  if dpkg -s kernel-notify | grep Status |grep -q installed; then
    installation="dpkg"
    package="kernel-notify-$latestVer""_all.deb"
  else
    installation="source"
    package="v$latestVer.tar.gz"
  fi
else
  installation="source"
  package="v$latestVer.tar.gz"
fi

if [ "${latestVer//.}" -ne "${version//.}" ]; then
  echo "Updates are available, updating"
  if [ "$installation" == "dpkg" ]; then
    curl --progress-bar -O -L $(curl -s -L https://api.github.com/repos/dragon8oy/kernel-notify/releases/latest "$githubAPIString" |grep "browser_download_url.*deb" |cut -d : -f 2,3 |tr -d \")
  else
    curl --progress-bar -O -L "https://github.com/Dragon8oy/kernel-notify/archive/v$latestVer.tar.gz"
  fi

  if [ "$installation" == "dpkg" ]; then
    for filename in /tmp/kernel-notify/$package; do
      if ! file "$filename" | grep -q 'Debian binary package'; then
        echo "$filename: Not a Debian package"
        checkFiles
        echo "  ATTENTION: Downloaded update faulty"
        exit 2
      fi
    done
  else
    for filename in /tmp/kernel-notify/*.tar.gz; do
      if ! file "$filename" | grep -q 'gzip compressed data'; then
        echo "$filename: Not a compressed archive"
        checkFiles
        echo "  ATTENTION: Downloaded update faulty"
        exit 2
      fi
    done
  fi

  if [ "$installation" == "dpkg" ]; then
    checkDpkg
    sudo dpkg -i "$package"
    exitCode="0"
  else
    tar -xf "$package" && cd "kernel-notify-$latestVer/" && ./install.sh
    exitCode="0"
  fi
else
  echo "Program up-to-date"
  exitCode="1"
fi
checkFiles
exit $exitCode
